//
//  ViewedPresenter.swift
//  NY_TIMES
//
//  Created by Saul Goodman on 30.07.2020.
//  Copyright (c) 2020 Shvets. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class ViewedPresenter {

    // MARK: - Private properties -

    private unowned let view: ViewedViewInterface
    private let interactor: ViewedInteractorInterface
    private let wireframe: ViewedWireframeInterface

    var news = [News]() {
        didSet {
            view.reloadData()
        }
    }
    
    // MARK: - Lifecycle -

    init(view: ViewedViewInterface, interactor: ViewedInteractorInterface, wireframe: ViewedWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension ViewedPresenter: ViewedPresenterInterface {
    func item(at indexPath: IndexPath) -> NewsViewItemInterface {
        return news[indexPath.row]
    }
    
    func viewDidLoad() {
        view.setLoadingVisible(true)
        
        interactor.getNewsBy(category: .viewed, period: 30) { [weak self] (news, error) in
            
            self?.view.setLoadingVisible(false)
            
            if let news = news {
                self?.news = news
            }
            else if let err = error {
                self?.view.showAlertWith(title: AlertString.kError, message: err.localizedDescription)
            }
        }
    }
    
    func numberOfItems(in section: Int) -> Int {
        return news.count
    }
    
    func didSelectRowAtIndexPath(_ indexPath: IndexPath) {
        wireframe.navigate(to: .details(news[indexPath.row]))
    }
}
